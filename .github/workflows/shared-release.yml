name: Release (shared)
on:
  workflow_call:
    inputs:
      branch:
        description: Name of the release branch
        type: string
        required: true
      tag:
        description: Name of the tag/release that is about to be released
        type: string
        required: true
      version:
        description: Version that is about to be released
        type: string
        required: true
      target-commitish:
        description: Specifies the commitish value that determines where the Git tag + release are created from.
        type: string
        required: true
      changelog-file:
        description: Where to look for the project changelog
        type: string
        required: true
      files-from-workflow:
        description: Specifies the name of the workflow that generated asset files to be attached to the release.
        type: string
        required: true
      files:
        description: Newline-delimited list of path globs for asset files to upload
        type: string
        required: true

jobs:
  safety-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check if tag already exists
        run: |
          git fetch --tags origin
          git show-ref --tags --quiet --verify -- refs/tags/${{ inputs.tag }}

  extract-release-notes:
    needs: safety-checks
    runs-on: ubuntu-latest
    outputs:
      release-notes: ${{ steps.generate_notes.outputs.release_notes }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.target-commitish }}
      - run: pwd
      - run: ls -la
      - name: Get notes
        id: generate_notes
        uses: yashanand1910/standard-release-notes@v1.3.0
        with:
          version: ${{ inputs.version }}
          changelog_path: ${{ inputs.changelog-file }}

  download-release-assets:
    needs: safety-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.target-commitish }}
      - run: |
          gh run list -R ${{ github.repository }} -b ${{ inputs.branch }} -w ${{ inputs.files-from-workflow }} --limit 5
          gh run list -R ${{ github.repository }} -b ${{ inputs.branch }} -w ${{ inputs.files-from-workflow }} --limit 5 --json conclusion,databaseId
          export WORKFLOW_ID=$(gh run list -R ${{ github.repository }} -b ${{ inputs.branch }} -w ${{ inputs.files-from-workflow }} --limit 1 --json conclusion,databaseId --jq '.[] | select( .conclusion == "success" ) | .databaseId')
          echo "Workflow ID: $WORKFLOW_ID"
          [[ -z "$WORKFLOW_ID" ]] && { echo "Workflow ID is empty" ; exit 1; }
          GH_DEBUG=1 gh run download $WORKFLOW_ID --dir ./release_artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: pwd
      - run: ls -la
      - run: ls -la ./release_artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: release_artifacts
          path: ./release_artifacts
          retention-days: 1

  release:
    needs:
      - extract-release-notes
      - download-release-assets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: release_artifacts
      - run: tree -d .
      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        # working-directory: release_artifacts/
        with:
          ###########################################################
          draft: false # NOTE: NOT making DRAFT releases in this repo
          ###########################################################
          tag_name: ${{ inputs.tag }}
          fail_on_unmatched_files: true
          target_commitish: ${{ inputs.target-commitish }}
          body: ${{ needs.extract-release-notes.outputs.release-notes }}
          files: ${{ inputs.files }}